## Sonoff Pow
## which switches a light
## and visualizes power useage via it's LED
#===============================================================================
substitutions:
  device_name: subtable
  device_friendly_name: "Untertischlicht"
#===============================================================================  


esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m
  board_flash_mode: dout
#  on_boot:
#  - switch.turn_on: relay

wifi:
  networks:
    - ssid: !secret realstuffwifi_name
      password: !secret realstuffwifi_pass
  reboot_timeout: 2h

  ap:
    ssid: "r3Light Fallback Hotspot"
    password: !secret fallbackwifi_pass

  manual_ip:
    static_ip: 192.168.33.36
    gateway: 192.168.33.1
    dns1: 192.168.33.1
    subnet: 255.255.255.0

captive_portal:

# Enable logging
logger:
  baud_rate: 0

#api:
#  password: !secret api_password
#  reboot_timeout: 0s

ota:
  password: !secret api_password

mqtt:
  broker: !secret realraum_mqtt_broker
  discovery: true
  topic_prefix: realraum/${device_name}

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "${device_friendly_name} Button"
    on_press:
      - light.toggle: subtablelight

output:
  - platform: esp8266_pwm
    id: pow_blue_led
    pin:
      number: GPIO15
      inverted: false
  - platform: gpio
    pin: GPIO12
    id: relay

light:
  - platform: monochromatic
    name: ${device_friendly_name} Blue LED
    output: pow_blue_led
    id: blue_led
  - platform: binary
    output: relay
    id: subtablelight
    name: "${device_friendly_name}"
    state_topic: realraum/${device_name}/state
    command_topic: action/${device_name}/command

uart:
  rx_pin: RX
  baud_rate: 4800

sensor:
  - platform: hlw8012
    sel_pin: 5
    cf_pin: 14
    cf1_pin: 13
    voltage_divider: 2515
    update_interval: 20s
    current:
      name: ${device_friendly_name} Current
      icon: mdi:current-ac
    voltage:
      name: ${device_friendly_name} Voltage
      icon: mdi:flash
    power:
      name: ${device_friendly_name} Power
      id: subtable_wattage
      icon: mdi:gauge
      on_value:
        if:
          condition:
            sensor.in_range:
              id: subtable_wattage
              above: 4.0
          then:
            - light.turn_on:
                id: blue_led
                brightness: !lambda |-
                  return 0.2+0.8*min(id(subtable_wattage).state*0.8/2000.0,0.8);
          else:
            - light.turn_off: blue_led
  - platform: wifi_signal
    name: "${device_friendly_name} WiFi Signal"
    update_interval: 60s
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15
          send_first_at: 1
    icon: mdi:wifi

web_server:
  port: 80
